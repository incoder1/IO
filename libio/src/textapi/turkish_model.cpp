/*
 *
 * Copyright (c) 2016-2023
 * Viktor Gubin
 *
 * Use, modification and distribution are subject to the
 * Boost Software License, Version 1.0. (See accompanying file
 * LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
 *
 */
#include "stdafx.hpp"
#include "io/textapi/detail/turkish_model.hpp"

namespace io {

namespace detail {


/* Character Mapping Table:
 * ILL: illegal character.
 * CTR: control character specific to the charset.
 * RET: carriage/return.
 * SYM: symbol (punctuation) that does not belong to word.
 * NUM: 0 - 9.
 *
 * Other characters are ordered by probabilities
 * (0 is the most common character in the language).
 *
 * Orders are generic to a language. So the codepoint with order X in
 * CHARSET1 maps to the same character as the codepoint with the same
 * order X in CHARSET2 for the same language.
 * As such, it is possible to get missing order. For instance the
 * ligature of 'o' and 'e' exists in ISO-8859-15 but not in ISO-8859-1
 * even though they are both used for French. Same for the euro sign.
 */
static const uint8_t ISO_8859_3_TURKISH_CHAR_TO_ORDER_MAP[] = {
	0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,0xFC,0xFE,0xFE,0xFC,0xFE,0xFE,
	0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,
	0xFD,0xFD,0xFD,0xFD,0xFD,0xFD,0xFD,0xFD,0xFD,0xFD,0xFD,0xFD,0xFD,0xFD,0xFD,0xFD,
	0xFB,0xFB,0xFB,0xFB,0xFB,0xFB,0xFB,0xFB,0xFB,0xFB,0xFD,0xFD,0xFD,0xFD,0xFD,0xFD,
	0xFD,0x00,0x0F,0x13,0x07,0x01,0x1B,0x15,0x12,0x06,0x1C,0x09,0x04,0x0B,0x03,0x0D,
	0x17,0x1F,0x05,0x0A,0x08,0x0C,0x14,0x1D,0x1E,0x0E,0x16,0xFD,0xFD,0xFD,0xFD,0xFD,
	0xFD,0x00,0x0F,0x13,0x07,0x01,0x1B,0x15,0x12,0x02,0x1C,0x09,0x04,0x0B,0x03,0x0D,
	0x17,0x1F,0x05,0x0A,0x08,0x0C,0x14,0x1D,0x1E,0x0E,0x16,0xFD,0xFD,0xFD,0xFD,0xFE,
	0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,
	0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,
	0xFD,0x42,0xFD,0xFD,0xFD,0xFF,0x43,0xFD,0xFD,0x02,0x11,0x19,0x44,0xFD,0xFF,0x45,
	0xFD,0x46,0xFD,0xFD,0xFD,0xFD,0x47,0xFD,0xFD,0x06,0x11,0x19,0x48,0xFD,0xFF,0x49,
	0x2D,0x26,0x21,0xFF,0x27,0x4A,0x4B,0x18,0x2F,0x24,0x4C,0x30,0x4D,0x20,0x23,0x4E,
	0xFF,0x28,0x4F,0x25,0x31,0x50,0x1A,0xFD,0x51,0x52,0x29,0x22,0x10,0x53,0x54,0x2C,
	0x2D,0x26,0x21,0xFF,0x27,0x55,0x56,0x18,0x2F,0x24,0x57,0x30,0x58,0x20,0x23,0x59,
	0xFF,0x28,0x5A,0x25,0x31,0x5B,0x1A,0xFD,0x5C,0x5D,0x29,0x22,0x10,0x5E,0x5F,0xFD
};

static const uint8_t ISO_8859_9_TURKISH_CHAR_TO_ORDER_MAP[] = {
	0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,0xFC,0xFE,0xFE,0xFC,0xFE,0xFE,
	0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,
	0xFD,0xFD,0xFD,0xFD,0xFD,0xFD,0xFD,0xFD,0xFD,0xFD,0xFD,0xFD,0xFD,0xFD,0xFD,0xFD,
	0xFB,0xFB,0xFB,0xFB,0xFB,0xFB,0xFB,0xFB,0xFB,0xFB,0xFD,0xFD,0xFD,0xFD,0xFD,0xFD,
	0xFD,0x00,0x0F,0x13,0x07,0x01,0x1B,0x15,0x12,0x06,0x1C,0x09,0x04,0x0B,0x03,0x0D,
	0x17,0x1F,0x05,0x0A,0x08,0x0C,0x14,0x1D,0x1E,0x0E,0x16,0xFD,0xFD,0xFD,0xFD,0xFD,
	0xFD,0x00,0x0F,0x13,0x07,0x01,0x1B,0x15,0x12,0x02,0x1C,0x09,0x04,0x0B,0x03,0x0D,
	0x17,0x1F,0x05,0x0A,0x08,0x0C,0x14,0x1D,0x1E,0x0E,0x16,0xFD,0xFD,0xFD,0xFD,0xFE,
	0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,
	0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,
	0xFD,0xFD,0xFD,0xFD,0xFD,0xFD,0xFD,0xFD,0xFD,0xFD,0xFD,0xFD,0xFD,0xFD,0xFD,0xFD,
	0xFD,0xFD,0xFD,0xFD,0xFD,0x32,0xFD,0xFD,0xFD,0xFD,0xFD,0xFD,0xFD,0xFD,0xFD,0xFD,
	0x2D,0x26,0x21,0x2B,0x27,0x33,0x2E,0x18,0x2F,0x24,0x34,0x30,0x35,0x20,0x23,0x36,
	0x19,0x28,0x37,0x25,0x31,0x38,0x1A,0xFD,0x2A,0x39,0x29,0x22,0x10,0x02,0x11,0x2C,
	0x2D,0x26,0x21,0x2B,0x27,0x3A,0x2E,0x18,0x2F,0x24,0x3B,0x30,0x3C,0x20,0x23,0x3D,
	0x19,0x28,0x3E,0x25,0x31,0x3F,0x1A,0xFD,0x2A,0x40,0x29,0x22,0x10,0x06,0x11,0x41
};

/* Model Table:
 * Total sequences: 878
 * First 512 sequences: 0.9932381051376177
 * Next 512 sequences (512-1024): 0.00676189486238231
 * Rest: 1.3010426069826053e-17
 * Negative sequences: TODO
 */
static const uint8_t TURKISH_LANG_MODEL[] = {
	3,3,3,3,3,3,2,3,3,3,3,3,3,2,3,3,2,3,3,3,3,3,3,3,3,3,0,3,2,3,3,0,0,0,0,0,
	3,3,3,3,3,3,0,3,3,3,3,3,3,3,3,3,0,3,3,3,3,3,3,3,3,3,0,3,3,3,3,2,0,0,0,0,
	3,3,2,3,3,3,0,3,3,3,3,3,3,3,3,3,0,3,3,3,3,3,3,3,3,3,0,3,2,2,2,2,0,0,0,0,
	3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,2,3,0,2,3,2,2,0,0,2,0,2,0,
	3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,0,3,3,3,3,2,3,3,0,2,3,2,2,0,0,2,2,2,2,
	3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,2,3,3,2,2,2,3,0,0,2,
	2,2,0,3,3,3,3,3,3,3,3,3,0,2,3,2,0,3,2,3,2,2,3,3,3,3,0,2,0,0,2,0,0,0,0,0,
	3,3,3,2,3,3,3,3,2,2,2,2,3,3,3,2,3,0,2,2,2,2,2,0,0,0,3,2,2,3,0,0,2,0,0,2,
	3,3,3,2,3,3,3,2,3,3,3,3,3,3,3,3,3,0,3,2,3,2,3,2,3,0,3,3,2,2,0,0,2,0,0,0,
	3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,2,3,2,2,2,2,2,3,0,3,2,0,2,0,0,0,3,3,0,
	3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,0,3,3,3,2,2,3,3,0,3,3,2,3,0,0,2,0,0,0,
	3,3,3,2,3,3,3,3,2,2,3,3,3,3,3,3,3,2,3,3,0,2,3,3,0,0,3,2,0,2,2,0,2,2,0,2,
	3,3,3,3,3,3,0,3,3,3,3,3,2,2,3,3,0,3,3,3,3,3,3,3,3,3,0,3,0,2,2,0,0,0,0,0,
	3,3,3,3,3,3,0,3,3,3,3,3,3,3,3,3,0,3,3,3,3,3,3,3,3,3,0,3,3,3,2,0,0,0,0,2,
	3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,2,3,2,3,3,2,0,2,0,3,2,0,2,0,0,0,0,0,0,
	3,3,3,3,3,3,3,3,2,2,2,2,3,3,2,2,3,0,2,2,2,0,2,0,0,0,3,0,2,2,0,0,0,0,0,0,
	0,2,0,3,3,3,0,3,3,3,3,3,0,2,3,3,0,3,2,3,3,0,3,3,3,3,2,3,0,0,0,0,0,0,0,0,
	3,3,3,2,3,2,3,2,3,3,2,3,3,2,0,3,3,0,2,2,2,3,0,2,3,0,2,2,0,0,0,0,0,0,2,0,
	3,3,3,3,3,3,3,2,3,2,3,3,3,3,3,3,3,0,0,0,2,2,2,2,3,0,0,2,0,2,0,0,0,2,0,2,
	3,3,3,2,3,3,3,2,3,3,0,2,3,3,2,2,3,0,3,2,0,2,2,0,0,0,0,2,0,0,0,2,2,0,0,0,
	3,3,3,2,3,3,2,2,0,2,2,2,3,3,3,0,2,2,0,2,3,2,2,0,0,0,0,2,0,0,0,0,2,0,0,0,
	3,3,3,2,3,3,3,2,2,2,3,2,3,3,2,2,3,0,3,0,0,2,0,2,0,0,3,2,0,2,0,0,0,2,0,0,
	3,3,3,0,3,2,3,3,2,2,2,3,3,3,3,2,3,0,2,3,0,3,2,0,0,0,2,0,0,2,0,0,0,0,0,0,
	3,3,3,2,3,3,3,2,3,2,3,3,3,3,2,3,2,0,3,0,0,2,2,3,2,0,0,2,0,0,0,0,0,0,0,0,
	3,3,3,0,3,3,3,2,3,2,0,3,2,3,2,2,3,0,0,0,0,2,0,0,0,0,2,0,0,0,0,0,0,0,0,0,
	3,3,3,0,3,3,3,3,0,0,0,3,3,2,0,2,3,0,0,2,2,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,3,3,3,0,3,3,3,3,3,0,0,3,2,0,0,2,2,2,2,3,2,3,3,0,2,0,0,0,0,0,0,0,0,
	3,3,3,0,3,3,3,0,3,2,2,0,3,3,3,0,2,0,0,2,0,3,2,2,2,0,2,3,0,0,0,0,0,0,0,2,
	3,3,3,0,2,0,2,0,0,0,0,0,3,3,2,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,
	3,3,3,2,2,2,0,0,2,2,2,0,2,3,2,0,2,0,2,0,0,0,0,0,0,0,0,2,0,2,0,0,0,0,0,0,
	2,2,2,2,2,0,0,0,2,0,0,0,0,2,0,2,0,0,2,0,2,0,0,2,0,0,0,0,0,2,0,0,0,0,0,0,
	0,0,2,0,0,0,0,0,0,0,2,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	2,0,0,2,0,0,0,0,0,0,2,0,0,2,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,2,2,2,0,0,2,2,0,2,0,0,2,2,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,2,0,2,0,0,2,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
};


#ifdef IO_DECLSPEC
IO_PUBLIC_SYMBOL const sequence_model*
#else
const sequence_model* IO_PUBLIC_SYMBOL
#endif // IO_DECLSPEC
iso_8859_3_turkish_sequence_model() noexcept
{
	static const sequence_model ret = {
		ISO_8859_3_TURKISH_CHAR_TO_ORDER_MAP,
		TURKISH_LANG_MODEL,
		0.993238F,
		28593
	};
	return &ret;
}

#ifdef IO_DECLSPEC
IO_PUBLIC_SYMBOL const sequence_model*
#else
const sequence_model* IO_PUBLIC_SYMBOL
#endif // IO_DECLSPEC
iso_8859_9_turkish_sequence_model() noexcept
{
	static const sequence_model ret = {
		ISO_8859_9_TURKISH_CHAR_TO_ORDER_MAP,
		TURKISH_LANG_MODEL,
		0.993238F,
		28599
	};
	return &ret;
}

}	// namespace detail

} // namespace io
